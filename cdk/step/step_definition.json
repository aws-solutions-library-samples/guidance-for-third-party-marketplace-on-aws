{
  "Comment": "State Machine to Validate entries in Third Party Marketplace Database",
  "StartAt": "Pass",
  "States": {
    "Pass": {
      "Comment": "A Pass state passes its input to its output, without performing work. Pass states are useful when constructing and debugging state machines.",
      "Type": "Pass",
      "Next": "All Entries"
    },
    "All Entries": {
      "Comment": "For each of the entry we need the same function to be invoked",
      "Type": "Map",
      "Next": "Send Verification Email",
      "ItemProcessor": {
        "ProcessorConfig": {
          "Mode": "INLINE"
        },
        "StartAt": "Check Entry",
        "States": {
           "Insert": {
            "Comment": "Will branch over each field and run data validity checks on them",
            "Type": "Parallel",
            "End":true,
            "Branches":[
              {
                "StartAt":"Check BrandId",
                "States":{
                  "Check BrandId":{
                    "Type": "Task",
                    "Resource": "arn:aws:states:::sqs:sendMessage.waitForTaskToken",
                    "Parameters": {
                    "QueueUrl": "https://sqs.us-east-1.amazonaws.com/$$$ACCOUNT_ID$$$/ThirdParty-Manual-Verification",
                    "MessageBody": {
                        "MessageTitle": "Task started by Step Functions. Waiting for callback with task token.",
                        "TaskToken.$": "$$.Task.Token",
                        "BrandId.$":"$.dynamodb.Keys.BrandId",
                        "BrandLegalName.$":"$.dynamodb.NewImage.BrandLegalName",
                        "SupplierStatus.$":"$.dynamodb.NewImage.SupplierStatus"
                    }},
                    "End": true
                  }                  
                }
              },
              {
                "StartAt":"Check Image Requirement",
                "States":{
                  "Bad Images":{
                    "Type": "Fail",
                    "Cause": "Image Specification not valid"
                  },
                  "Images OK":{
                    "Type":"Pass",
                    "End":true
                  },
                  "Check Image Requirement":{
                    "Type": "Choice",            
                    "Choices": [
                      {
                        "Variable": "$.dynamodb.NewImage.ImageStandard.BOOL",
                        "BooleanEquals": true,
                        "Next": "Images OK"
                      }
                    ],
                    "Default": "Bad Images"
                  }
                }
              }
            ],
            "Catch":[
              {
                "ErrorEquals":["States.ALL"],
                "Next":"Error Discovered During Data Validation"
              }
            ]   
            },
            "Delete": {
              "Type": "Pass",
              "Comment": "Do not have any triggers on Delete",
              "End":true
            },
            "Error Discovered During Data Validation": {
              "Type": "Fail",
              "Cause": "Error in validation data"
            },
            "Check Entry": {
            "Comment": "A Choice to see if the first entrys->eventName is INSERT Choice rules can implement 16 different comparison operators, and can be combined using And, Or, and Not",
            "Type": "Choice",
            "Choices": [
              {
                "Variable": "$.eventName",
                "StringEquals": "INSERT",
                "Next": "Insert"
              },
              {
                "Variable": "$.eventName",
                "StringEquals": "MODIFY",
                "Next": "Insert"
              },
              {
                "Variable": "$.eventName",
                "StringEquals": "DELETE",
                "Next": "Delete"
              }
            ],
            "Default": "Delete"
          }
        }
      },
      "Catch":[
        {
          "ErrorEquals":["States.ALL"],
          "Next":"Need Programmer Attention"
        }
      ]      
    },          
    "Send Verification Email": {
      "Type": "Pass",
      "End": true
    },
    "Need Programmer Attention":{
      "Type":"Fail",
      "Cause":"Possible causes: deletion on table entry or invalid data; Make this a choice and redirect to manual review"
    }
  }
}

